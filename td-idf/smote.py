import numpy as np
import matplotlib.pyplot as plt
from imblearn.over_sampling import SMOTE

# Generate a simple imbalanced dataset
X_minority = np.array([[1, 2], [2, 2], [3, 1], [2, 1]])
y_minority = np.array([1, 1, 1, 1])
X_majority = np.array([[7, 7], [8, 8], [9, 9], [6, 6], [7, 8], [8, 7]])
y_majority = np.array([0, 0, 0, 0, 0, 0])

# Combine the dataset
X = np.vstack((X_minority, X_majority))
y = np.hstack((y_minority, y_majority))

# Apply SMOTE
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X, y)

# Plot the original and synthetic data points
plt.figure(figsize=(10, 6))

# Original minority class
plt.scatter(X_minority[:, 0], X_minority[:, 1], label='Minority Class (Original)', color='blue', s=100, edgecolor='k')

# Original majority class
plt.scatter(X_majority[:, 0], X_majority[:, 1], label='Majority Class', color='red', s=100, edgecolor='k')

# Synthetic examples
synthetic_points = X_resampled[len(X):]  # Synthetic examples are appended after original data points
plt.scatter(synthetic_points[:, 0], synthetic_points[:, 1], label='Synthetic Examples', color='green', s=100, edgecolor='k', marker='x')

plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.legend()
plt.title('Synthetic Examples Generated by SMOTE')
plt.show()
